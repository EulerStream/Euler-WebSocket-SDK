{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/client/types.ts"],"names":[],"mappings":";;;AAAA,6BAAsB;AACtB,uCAAqD;AAErD,IAAY,eAYX;AAZD,WAAY,eAAe;IAEzB,iBAAiB;IACjB,0FAA4B,CAAA;IAC5B,4DAAa,CAAA;IAEb,sCAAsC;IACtC,gGAA+B,CAAA;IAC/B,wFAA2B,CAAA;IAC3B,8EAAsB,CAAA;IACtB,gEAAe,CAAA;IACf,oEAAiB,CAAA;AACnB,CAAC,EAZW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAY1B;AAED,MAAM,aAAa,GAAG,OAAC;KAClB,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACjC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;AAExC,QAAA,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC5C,YAAY,EAAE,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;IAC3C,WAAW,EAAE,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC;CAC5C,CAAC,CAAC;AAEU,QAAA,sBAAsB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC7C,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IACxC,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IACxC,aAAa,EAAE,OAAC,CAAC,UAAU,CAAC,uBAAa,CAAC,CAAC,OAAO,CAAC,uBAAa,CAAC,EAAE,CAAC;IACpE,QAAQ,EAAE,6BAAqB,CAAC,OAAO,CAAC,EAAE,CAAC;CAC5C,CAAC,CAAC","sourcesContent":["import {z} from \"zod\";\nimport {DecodedData, SchemaVersion} from \"@/webcast\";\n\nexport enum ClientCloseCode {\n\n  // Standard Codes\n  INTERNAL_SERVER_ERROR = 1011,\n  NORMAL = 1000,\n\n  // Custom Codes (Must be 4000 to 4999)\n  TIKTOK_CLOSED_CONNECTION = 4500,\n  TOO_MANY_CONNECTIONS = 4429,\n  INVALID_OPTIONS = 4401,\n  NOT_LIVE = 4404,\n  STREAM_END = 4005\n}\n\nconst coerceBoolean = z\n    .enum(['true', 'false', '1', '0'])\n    .transform(val => val === 'true' || val === '1');\n\nexport const WebSocketFeatureFlags = z.object({\n  bundleEvents: coerceBoolean.default(\"true\"),\n  rawMessages: coerceBoolean.default(\"false\"),\n});\n\nexport const WebSocketOptionsSchema = z.object({\n  uniqueId: z.string(),\n  jwtKey: z.string().optional().nullable(),\n  apiKey: z.string().optional().nullable(),\n  schemaVersion: z.nativeEnum(SchemaVersion).default(SchemaVersion.v1),\n  features: WebSocketFeatureFlags.default({})\n});\n\nexport type WebSocketOptions = z.infer<typeof WebSocketOptionsSchema>;\nexport type WebSocketFeatureFlags = z.infer<typeof WebSocketFeatureFlags>;\n\nexport type ClientMessageBundle = {\n  timestamp: number,\n  messages: DecodedData[]\n}\n"]}